{"version":3,"sources":["media.js"],"names":["$","on","setSaveButtonIndicator","$newInputRow","clone","find","attr","parent","before","e","preventDefault","confirm","$category","target","children","val","postData","pitonConfig","csrfTokenName","csrfTokenValue","ajax","url","routes","adminMediaCategoryDelete","method","data","success","r","status","fadeOut","remove","error","console","log","each","i","$form","$saveButton","hasClass","removeClass","addClass","$button","$medium","parents","serialize","adminMediaDelete","adminMediaSave","prop","html","mediaCategory","window","location","adminMedia"],"mappings":";AAKAA,EAAE,wBAAwBC,GAAG,QAAS,WAClCC,2BAIJF,EAAE,wBAAwBC,GAAG,QAAS,sBAAuB,WACrDE,IAAAA,EAAeH,EAAE,8CAA8CI,QACnED,EAAaE,KAAK,UAAUC,KAAK,YAAY,GAC7CN,EAAE,MAAMO,OAAO,OAAOC,OAAOL,GAC7BD,2BAIJF,EAAE,wBAAwBC,GAAG,QAAS,sBAAuB,SAAUQ,GAE/D,GADJA,EAAEC,kBACGC,UACM,OAAA,EAEPC,IAAAA,EAAYZ,EAAES,EAAEI,QAAQN,OAAO,oBAC/BK,GAAwD,IAAxDA,EAAUE,SAAS,4BAA4BC,MAA/CH,CAQAI,IAAAA,EAAW,CACLhB,GAAAA,EAAES,EAAEI,QAAQP,KAAK,UAE3BU,EAASC,YAAYC,eAAiBD,YAAYE,eAClDnB,EAAEoB,KAAK,CACHC,IAAKJ,YAAYK,OAAOC,yBACxBC,OAAQ,OACRC,KAAMT,EACNU,QAAS,SAAUC,GACE,YAAbA,EAAEC,QACFhB,EAAUiB,QAAQ,WACd7B,EAAE,MAAM8B,YAIpBC,MAAO,SAAUJ,GACbK,QAAQC,IAAI,yFAtBhBrB,EAAUiB,QAAQ,WACd7B,EAAE,MAAM8B,aA2BpB9B,EAAE,qBAAqBkC,KAAK,SAAUC,GAC9BC,IAAAA,EAAQpC,EAAE,MACVqC,EAAcD,EAAM/B,KAAK,sBAC7B+B,EAAMnC,GAAG,QAAS,WACVoC,EAAYC,SAAS,gBACzBD,EAAYE,YAAY,uBAAuBC,SAAS,mBAKhExC,EAAE,gBAAgBC,GAAG,QAAS,SAAU,SAAUQ,GAC9CA,EAAEC,iBACE+B,IAAAA,EAAUzC,EAAES,EAAEI,QACd6B,EAAU1C,EAAES,EAAEI,QAAQ8B,QAAQ,gBAK9B3B,EAAWyB,EAAQE,QAAQ,QAAQC,YACvC5C,EAAEoB,KAAK,CACHC,IAAM,WAAaoB,EAAQnC,KAAK,SAAYW,YAAYK,OAAOuB,iBAAmB5B,YAAYK,OAAOwB,eACrGtB,OAAQ,OACRC,KAAMT,EACNU,QAAS,SAAUC,GACX,WAAac,EAAQnC,KAAK,UAAyB,YAAbqB,EAAEC,OACxCc,EAAQb,QAAQ,WACZ7B,EAAE,MAAM8B,WAEL,SAAWW,EAAQnC,KAAK,UAAyB,YAAbqB,EAAEC,QAC7Ca,EAAQF,YAAY,eAAeC,SAAS,wBAGpDT,MAAO,SAAUJ,GACbK,QAAQC,IAAI,sFAMxBjC,EAAE,sBAAsBC,GAAG,SAAU,SAAUQ,GAG3CT,EAAE,MAAMK,KAAK,UAAU0C,KAAK,YAAY,GAAMC,KAF9C,2KAMJhD,EAAE,0BAA0BC,GAAG,SAAU,WACjCgD,IAAAA,EAAgBjD,EAAE,MAAMe,MACN,MAAlBkC,IAGAC,OAAOC,SAFW,QAAlBF,EAEkBhC,YAAYK,OAAO8B,WAEnBnC,YAAYK,OAAO8B,WAAa,IAAMH","file":"media.js","sourceRoot":"..","sourcesContent":["// --------------------------------------------------------\n// Media management\n// --------------------------------------------------------\n\n// Listen for media category changes to enable save button\n$('.jsEditMediaCategory').on('input', function () {\n    setSaveButtonIndicator();\n});\n\n// Add category/gallery name input to media categories form\n$('.jsEditMediaCategory').on('click', '.jsAddMediaCategory', function () {\n    let $newInputRow = $('.jsMediaCategoryElement > .jsMediaCategory').clone();\n    $newInputRow.find('button').attr('disabled', false);\n    $(this).parent('div').before($newInputRow);\n    setSaveButtonIndicator();\n});\n\n// Delete category from media categories form\n$('.jsEditMediaCategory').on('click', 'button[type=button]', function (e) {\n    e.preventDefault();\n    if (!confirm()) {\n        return false;\n    }\n    let $category = $(e.target).parent('.jsMediaCategory');\n    if ($category.children('input[name^=category_id]').val() == '') {\n        // Not yet saved so just remove.\n        $category.fadeOut(function () {\n            $(this).remove();\n        });\n        return;\n    }\n    // Otherwise continue with physical delete\n    let postData = {\n        \"id\": $(e.target).attr('value')\n    }\n    postData[pitonConfig.csrfTokenName] = pitonConfig.csrfTokenValue;\n    $.ajax({\n        url: pitonConfig.routes.adminMediaCategoryDelete,\n        method: \"POST\",\n        data: postData,\n        success: function (r) {\n            if (r.status === \"success\") {\n                $category.fadeOut(function () {\n                    $(this).remove();\n                });\n            }\n        },\n        error: function (r) {\n            console.log('PitonCMS: There was an error submitting the form. Contact your administrator.')\n        }\n    });\n});\n\n// Show user that a media input changed and needs to be saved\n$('.jsMediaCard form').each(function (i) {\n    let $form = $(this);\n    let $saveButton = $form.find('button[value=save]');\n    $form.on('input', function () {\n        if ($saveButton.hasClass('btn-primary')) return;\n        $saveButton.removeClass('btn-outline-primary').addClass('btn-primary');\n    });\n});\n\n// Save media form edits when viewing all media\n$('.jsMediaCard').on('click', 'button', function (e) {\n    e.preventDefault();\n    let $button = $(e.target);\n    let $medium = $(e.target).parents('.jsMediaCard');\n    // if ('delete' === $button.attr('value') && !confirm()) {\n    //     return false;\n    // }\n    // jQuery ignores the button value, so append that to post data\n    let postData = $button.parents('form').serialize();\n    $.ajax({\n        url: ('delete' === $button.attr('value')) ? pitonConfig.routes.adminMediaDelete : pitonConfig.routes.adminMediaSave,\n        method: \"POST\",\n        data: postData,\n        success: function (r) {\n            if ('delete' === $button.attr('value') && r.status === \"success\") {\n                $medium.fadeOut(function () {\n                    $(this).remove();\n                });\n            } else if (\"save\" === $button.attr('value') && r.status === \"success\") {\n                $button.removeClass('btn-primary').addClass('btn-outline-primary');\n            }\n        },\n        error: function (r) {\n            console.log('PitonCMS: There was an error submitting the form. Contact your administrator.')\n        }\n    });\n});\n\n// Upload media action\n$('.jsMediaUploadForm').on('submit', function (e) {\n    let processingText = `<span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n    <span class=\"sr-only\">Loading...</span>Uploading and optimizing media...`;\n    $(this).find('button').prop('disabled', true).html(processingText);\n});\n\n// Filter media on category\n$('.jsMediaCategorySelect').on('change', function () {\n    let mediaCategory = $(this).val();\n    if (mediaCategory === 'x') return;\n    if (mediaCategory === 'all') {\n        // Do not prepend / if requesting all media\n        window.location = pitonConfig.routes.adminMedia;\n    } else {\n        window.location = pitonConfig.routes.adminMedia + '/' + mediaCategory;\n    }\n});\n"]}