{"version":3,"sources":["modules/formControl.js","modules/alert.js","modules/collapse.js","modules/main.js","modules/spinner.js","modules/drag.js","modules/xhrPromise.js","navigation.js"],"names":["enableFormControl","control","disabled","disableFormControl","dismissAlertInlineMessage","event","target","dataset","dismiss","closest","remove","alertInlineMessage","severity","heading","message","container","document","createElement","innerHTML","pitonConfig","alertInlineHTML","querySelector","classList","add","join","insertAdjacentHTML","window","scrollTo","collapseToggle","collapse","collapseTarget","toggle","querySelectorAll","forEach","form","saveButtons","addEventListener","e","confirm","preventDefault","deletePrompt","enableSpinner","contains","disableSpinner","movedElement","inputEvent","Event","dragZone","dragHover","dropZone","style","cssText","getMovedElement","dragStartHandler","dataTransfer","setData","dropEffect","setTimeout","element","parentElement","insertBefore","cloneNode","lastElementChild","appendChild","dragEnterHandler","stopPropagation","matches","dragOverHandler","dragLeaveHandler","dragDropHandler","nextSibling","dragEndHandler","zone","dispatchEvent","XHRPromise","method","url","data","xhr","XMLHttpRequest","Promise","resolve","reject","onreadystatechange","readyState","DONE","status","response","JSON","parse","responseText","text","error","open","setRequestHeader","send","getXHRPromise","params","queryString","Object","keys","map","k","encodeURIComponent","postXHRPromise","csrfTokenName","csrfTokenValue","postData","navItems","navPages","navCollections","navPlaceholder","navElement","navContainer","navItemKey","appendNavElements","nav","newNav","arrayKey","input","name","replace","navId","pageId","value","pageTitle","navTitle","collectionId","collectionTitle","length","addPageNav","checked","navItem","push","addCollectionNav","addPlaceholderNav","movedElementParentId","newParent","deleteNavItem","deleteNavigationPrompt","navIds","i","id","parseInt","NaN","stringify","routes","adminNavigationDelete","then","catch","console","log"],"mappings":"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","file":"navigation.js","sourceRoot":"..","sourcesContent":["/**\n * Enable Form Control\n *\n * @param {object} control Control button element\n */\nconst enableFormControl = function(control) {\n    if (control && control.disabled) {\n        control.disabled = false;\n    }\n}\n\n/**\n * Disable Form Control\n *\n * @param {object} control Control button element\n */\nconst disableFormControl =  function(control) {\n    if (control && !control.disabled) {\n        control.disabled = true;\n    }\n}\n\nexport { enableFormControl, disableFormControl };","/**\n * Dismiss Inline Alert\n * @param {Event} event\n */\nconst dismissAlertInlineMessage = function(event) {\n    if (event.target.dataset.dismiss === \"alert\") {\n        event.target.closest(`[data-alert=\"container\"]`).remove();\n    }\n}\n\n/**\n * Display Inline HTML Message Alert\n * @param {string} severity Severity color code\n * @param {string} heading  Message heading\n * @param {mixed} message   Message list\n */\nconst alertInlineMessage = function(severity, heading, message) {\n    // Create element and insert alert HTML and update with alert data\n    let container = document.createElement(\"div\");\n    container.innerHTML = pitonConfig.alertInlineHTML;\n    container.querySelector(`[data-alert=\"container\"]`).classList.add(\"alert-\" + severity);\n    container.querySelector(`[data-alert=\"heading\"]`).innerHTML = heading;\n\n    // Stringify message\n    if (typeof message === 'object') {\n        message = message.join(\"<br>\");\n    }\n    container.querySelector(`[data-alert=\"content\"]`).innerHTML = message;\n\n    // Insert into main or body\n    let mainContainer = document.querySelector(\"main.main-content\");\n    mainContainer.insertAdjacentHTML('afterbegin', container.innerHTML);\n    window.scrollTo(0,0);\n}\n\nexport { alertInlineMessage, dismissAlertInlineMessage };","/**\n * Collapse Toggle\n * @param {Event} event\n */\nconst collapseToggle = function(event) {\n    if (event.target.dataset.collapse === 'toggle') {\n        let collapseTarget = event.target.closest(`[data-collapse=\"parent\"]`).querySelector(`[data-collapse=\"target\"]`);\n\n        if (collapseTarget) {\n            collapseTarget.classList.toggle(\"collapsed\");\n        }\n    }\n}\n\nexport { collapseToggle };","// --------------------------------------------------------\n// Main JS\n// --------------------------------------------------------\n\nimport { enableFormControl, disableFormControl } from './formControl.js';\nimport { dismissAlertInlineMessage } from './alert.js';\nimport { collapseToggle } from './collapse.js';\n\n// Form Control Events\ndocument.querySelectorAll(\"form\").forEach(form => {\n    // Disable form controls and listen for form input changes to re-enable save controls\n    let saveButtons = form.querySelectorAll(`[data-form-button=\"save\"]`);\n    if (saveButtons) {\n        saveButtons.forEach(control => {\n            disableFormControl(control);\n        });\n\n        // Listen for form changes to reenable controls\n        form.addEventListener(\"input\", (e) => {\n            saveButtons.forEach(control => {\n                enableFormControl(control);\n            });\n        }, false);\n    }\n\n    // Confirm discard of changes\n    form.querySelectorAll(`[data-form-button=\"cancel\"]`).forEach(control => {\n        control.addEventListener(\"click\", (e) => {\n            let userResponse = confirm(\"Click Ok to discard your changes, or cancel continue editing?\");\n            if (!userResponse) e.preventDefault();\n        }, false);\n    });\n\n    // Confirm delete\n    form.querySelectorAll(`[data-delete-prompt]`).forEach(control => {\n        control.addEventListener(\"click\", (e) => {\n            if (!confirm(e.target.dataset.deletePrompt)) e.preventDefault();\n        }, false);\n    });\n});\n\n// Binding click events to document\ndocument.addEventListener(\"click\", dismissAlertInlineMessage, false);\ndocument.addEventListener(\"click\", collapseToggle, false);","/**\n * Enable Spinner Overlay\n * @param {void}\n */\nconst enableSpinner = function() {\n    if (document.querySelector(\"body > .spinner\").classList.contains(\"d-none\")) {\n        document.querySelector(\"body > .spinner\").classList.remove(\"d-none\")\n    }\n}\n\n/**\n * Disable Spinner Overlay\n * @param {void}\n */\nconst disableSpinner = function() {\n    if (!document.querySelector(\"body > .spinner\").classList.contains(\"d-none\")) {\n        document.querySelector(\"body > .spinner\").classList.add(\"d-none\")\n    }\n}\n\nexport { enableSpinner, disableSpinner };","// Reference to element to be moved\nlet movedElement;\n\n// Event to dispatch pseudo \"input\" event\nconst inputEvent = new Event(\"input\", {\"bubbles\": true});\n\n// Drop zone classes\nconst dragZone = \"border: 1px dashed #000; height: 20px;\";\nconst dragHover = \"border: 1px dashed #000; height: 60px;\";\n\n// Empty drop zone divs to inject in DOM around draggable elements\nconst dropZone = document.createElement(\"div\");\ndropZone.classList.add(\"drag-drop\");\ndropZone.style.cssText = dragZone;\n\n/**\n * Return Moved Element\n */\nconst getMovedElement = function() {\n    return movedElement;\n}\n\n/**\n * Drag Start Handler\n * @param {Event} event\n */\nconst dragStartHandler = function(event) {\n    // Save reference to the element being moved\n    movedElement = event.target;\n\n    event.dataTransfer.setData(\"text/plain\", null);\n    event.dataTransfer.dropEffect = \"move\";\n\n    // Insert drop zone divs around each draggable element\n    // setTimeout() hack: https://stackoverflow.com/a/34698388/452133\n    // To allow DOM manipulation in dragstart\n    setTimeout(() => {\n        document.querySelectorAll(`[draggable=\"true\"]`).forEach(element => {\n            // Insert drop zone before all draggable elements\n            element.parentElement.insertBefore(dropZone.cloneNode(), element);\n\n            // Insert drop zone after last child\n            if (element.parentElement.lastElementChild === element) {\n                element.parentElement.appendChild(dropZone.cloneNode());\n            }\n        });\n\n        // Optional \"other\" drop targets\n        document.querySelectorAll(`[data-drop-zone=\"1\"]`).forEach(element => {\n            element.parentElement.insertBefore(dropZone.cloneNode(), element);\n        });\n    }, 0);\n}\n\n/**\n * Drag Enter Handler\n * @param {Event} event\n */\nconst dragEnterHandler = function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    event.dataTransfer.dropEffect = \"move\";\n\n    if (event.target.matches(\".drag-drop\")) {\n        event.target.classList.add(\"drag-hover\");\n        event.target.style.cssText = dragHover;\n    }\n}\n\n/**\n * Drag Over Handler\n * @param {Event} event\n */\nconst dragOverHandler = function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    event.dataTransfer.dropEffect = \"move\";\n}\n\n/**\n * Drag Leave Handler\n * @param {Event} event\n */\nconst dragLeaveHandler = function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    event.dataTransfer.dropEffect = \"move\";\n\n    if (event.target.matches(\".drag-drop\")) {\n        event.target.classList.remove(\"drag-hover\");\n        event.target.style.cssText = dragZone;\n    }\n}\n\n/**\n * Drag Drop Handler\n * @param {Event} event\n */\nconst dragDropHandler = function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (movedElement !== event.target && event.target.matches(\".drag-drop\")) {\n        event.target.parentElement.insertBefore(movedElement, event.target.nextSibling)\n    }\n}\n\n/**\n * Drag End Handler\n * @param {Event} event\n */\nconst dragEndHandler = function(event) {\n    // Cleanup drop zones\n    document.querySelectorAll(\".drag-drop\").forEach(zone => {\n        zone.remove();\n    });\n\n    // Initiatve input event\n    movedElement.dispatchEvent(inputEvent);\n}\n\nexport { dragStartHandler, dragEnterHandler, dragOverHandler, dragLeaveHandler, dragDropHandler, dragEndHandler, getMovedElement };","import { alertInlineMessage } from './alert.js';\nimport { disableSpinner } from './spinner.js';\n\n/**\n * XHR Request Promise\n * @param {string} method \"GET\"|\"POST\"\n * @param {string} url    Resource request URL\n * @param {mixed}  data   String or object\n */\nconst XHRPromise = function(method, url, data) {\n    let xhr = new XMLHttpRequest();\n\n    return new Promise((resolve, reject) => {\n        xhr.onreadystatechange = () => {\n            if (xhr.readyState !== XMLHttpRequest.DONE) return;\n\n            try {\n                if (xhr.status === 200) {\n                    // Successful server response\n                    let response = JSON.parse(xhr.responseText);\n                    if (response.status === \"success\") {\n                        // Response content successful\n                        resolve(response.text);\n                    } else {\n                        // Response successful but application failed\n                        reject(alertInlineMessage('danger', 'Failed', [response.text]));\n                    }\n                } else {\n                    // Failed server runtime response\n                    reject(alertInlineMessage('danger', 'Failed', [response.text]));\n                    disableSpinner();\n                }\n            } catch (error) {\n                reject(alertInlineMessage('danger', 'Error', [error]));\n                disableSpinner();\n            }\n        }\n\n        // Setup and send\n        xhr.open(method, url, true);\n        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n        xhr.send(data);\n    });\n}\n\n/**\n * GET XHR Promise Request\n * @param {string} url    Resource URL\n * @param {string} params Query string parameters\n */\nconst getXHRPromise = function(url, params) {\n    let queryString;\n\n    // Accept query string or build from object\n    if (typeof params === 'string') {\n        queryString = params;\n    } else if (typeof params === 'object') {\n        queryString = Object.keys(params).map((k) => {\n            return encodeURIComponent(k) + '=' + encodeURIComponent(params[k])\n        }).join('&');\n    }\n\n    // Attach query string to URL\n    if (queryString) {\n        url += '?' + queryString;\n    }\n\n    return XHRPromise(\"GET\", url);\n}\n\n/**\n * POST XHR Promise Request\n * @param {string} url  Resource URL\n * @param {string} data FormData object or object key value pairs\n */\nconst postXHRPromise = function(url, data) {\n    data = data ?? {};\n    data[pitonConfig.csrfTokenName] = pitonConfig.csrfTokenValue\n\n    // Serialize data\n    let postData = Object.keys(data).map((k) => {\n        return encodeURIComponent(k) + '=' + encodeURIComponent(data[k])\n    }).join('&');\n\n    return XHRPromise(\"POST\", url,  postData);\n}\n\nexport { getXHRPromise, postXHRPromise };\n","// --------------------------------------------------------\n// Navigation\n// --------------------------------------------------------\nimport './modules/main.js';\nimport { enableSpinner, disableSpinner } from './modules/spinner.js';\nimport { dragStartHandler, dragEnterHandler, dragOverHandler, dragLeaveHandler, dragEndHandler, getMovedElement } from './modules/drag.js';\nimport { postXHRPromise } from './modules/xhrPromise.js';\n\nconst navItems = [];\nconst navPages = document.querySelectorAll(`[data-add-nav=\"page\"] input`);\nconst navCollections = document.querySelectorAll(`[data-add-nav=\"collection\"] input`);\nconst navPlaceholder = document.querySelectorAll(`[data-add-nav=\"placeholder\"] input`);\nconst navElement = document.querySelector(`[data-navigation=\"spare\"] > div`);\nconst navContainer = document.querySelector(`[data-navigation-container=\"1\"]`);\nlet navItemKey = 0;\n\n/**\n * Append Navigation Elements\n */\nconst appendNavElements = function() {\n    navItems.forEach(nav => {\n        // Clone spare navigation element, and set unique name array key so POST array keeps inputs together\n        let newNav = navElement.cloneNode(true);\n        let arrayKey = (navItemKey++) + \"n\";\n        newNav.querySelectorAll(`input[name^=nav]`).forEach(input => {\n            input.name = input.name.replace(/(.+?\\[)(\\].+)/, \"$1\" + arrayKey + \"$2\");\n        });\n        newNav.dataset.navId = arrayKey;\n\n        // Set data\n        if (nav.pageId) {\n            newNav.querySelector(`input[name$=\"\\[pageId\\]\"]`).value = nav.pageId;\n            newNav.querySelector(`[data-nav=\"title\"]`).innerHTML = nav.pageTitle;\n            newNav.querySelector(`[data-nav=\"type\"]`).innerHTML = \"page\";\n            newNav.querySelector(`[data-nav=\"pageTitle\"]`).innerHTML = nav.pageTitle;\n            newNav.querySelector(`[data-nav=\"pageTitle\"]`).parentElement.classList.remove(\"d-none\");\n\n        } else if (nav.navTitle) {\n            newNav.querySelector(`[data-nav=\"title\"]`).innerHTML = nav.navTitle;\n            newNav.querySelector(`[data-nav=\"type\"]`).innerHTML = \"placeholder\";\n            newNav.querySelector(`input[name$=\"\\[navTitle\\]\"]`).value = nav.navTitle;\n            newNav.querySelector(`input[name$=\"\\[url\\]\"]`).value = nav.url;\n            newNav.querySelector(`input[name$=\"\\[url\\]\"]`).parentElement.classList.remove(\"d-none\");\n\n        } else if (nav.collectionId) {\n            newNav.querySelector(`input[name$=\"\\[collectionId\\]\"]`).value = nav.collectionId;\n            newNav.querySelector(`[data-nav=\"title\"]`).innerHTML = nav.collectionTitle;\n            newNav.querySelector(`[data-nav=\"type\"]`).innerHTML = \"collection\";\n            newNav.querySelector(`[data-nav=\"collectionTitle\"]`).innerHTML = nav.collectionTitle;\n            newNav.querySelector(`[data-nav=\"collectionTitle\"]`).parentElement.classList.remove(\"d-none\");\n\n        }\n\n        navContainer.appendChild(newNav);\n        newNav.dispatchEvent(new Event(\"input\", {\"bubbles\": true}));\n    });\n\n    // Reset\n    navItems.length = 0;\n}\n\n/**\n * Add Page Navigation\n */\nconst addPageNav = function() {\n    navPages.forEach(element => {\n        if (element.checked) {\n            let navItem = {\n                \"pageId\": element.dataset.pageId,\n                \"pageTitle\": element.dataset.pageTitle\n            }\n\n            element.checked = false;\n            navItems.push(navItem);\n        }\n\n    });\n\n    appendNavElements();\n}\n\n/**\n * Add Collection Navigation\n */\nconst addCollectionNav = function() {\n    navCollections.forEach(element => {\n        if (element.checked) {\n            let navItem = {\n                \"collectionId\": element.dataset.collectionId,\n                \"collectionTitle\": element.dataset.collectionTitle\n            }\n\n            element.checked = false;\n            navItems.push(navItem);\n        }\n\n    });\n\n    appendNavElements();\n}\n\n/**\n * Add Placeholder Navigation\n */\nconst addPlaceholderNav = function() {\n    if (navPlaceholder[0].value) {\n        let navItem = {\n            \"navTitle\": navPlaceholder[0].value,\n            \"url\": navPlaceholder[1].value\n        }\n\n        navPlaceholder[0].value = \"\";\n        navPlaceholder[1].value = \"\";\n        navItems.push(navItem);\n    }\n\n    appendNavElements();\n}\n\n/**\n * Insert Child Drop Zone\n */\n\n/**\n * OVERRIDE Drag Drop Handler\n * Overrides drag.js to support child navigation drops\n * @param {Event} event\n */\nconst dragDropHandler = function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    let movedElement = getMovedElement();\n\n    // Nothing to do if dropping on self\n    if (movedElement !== event.target && event.target.matches(\".drag-drop\")) {\n        let movedElementParentId = movedElement.querySelector(`input[name$=\"\\[parentId\\]\"]`).value;\n        let newParent = event.target.parentElement.closest(`[data-navigation=\"parent\"]`);\n\n        // If the element parentId matches the current parent ID (element sorted within current level), just drop in new order\n        if (movedElementParentId === newParent.dataset.navId) {\n            event.target.parentElement.insertBefore(movedElement, event.target.nextSibling);\n        }\n\n        // If the element parentId and does not match the new  parent ID, move to last child of new parent\n        if (movedElementParentId !== newParent.dataset.navId) {\n            movedElement.querySelector(`input[name$=\"\\[parentId\\]\"]`).value = newParent.dataset.navId;\n\n            // Add / remove class\n            if (newParent.dataset.navId === \"\") {\n                movedElement.classList.remove(\"sub-toggle-block\");\n            } else {\n                movedElement.classList.add(\"sub-toggle-block\");\n            }\n\n            event.target.parentElement.insertBefore(movedElement, event.target.nextSibling);\n        }\n    }\n}\n\nconst deleteNavItem =  function(event) {\n    if (!event.target.dataset.deleteNavigationPrompt) return;\n    if (!confirm(event.target.dataset.deleteNavigationPrompt)) return;\n\n     // Get nav element and create array of IDs to delete\n     let navIds = [];\n     let navElement = event.target.closest(`[data-navigation=\"parent\"]`);\n\n     // Get this ID and all currently assigned child navigation ID's. Some may have been previously saved before being added to this nav parent\n     navElement.querySelectorAll(`input[name$=\"\\[navId\\]\"]`).forEach((i) => {\n        let id = parseInt(i.value);\n        if (id !== NaN) {\n            navIds.push(id);\n        }\n     });\n\n     if (navIds.length > 0) {\n        // Delete any navs that had been saved\n        enableSpinner();\n        let data = JSON.stringify(navIds);\n\n        postXHRPromise(pitonConfig.routes.adminNavigationDelete, {\"navIds\": data})\n            .then(() => {\n                // This removes the current nav item along with any children\n                navElement.remove();\n                disableSpinner();\n            }).catch((text) => {\n                console.log(\"Failed to delete navigation: \", text);\n                disableSpinner();\n        });\n\n        // Reset\n        navIds.length = 0;\n     } else {\n        // This removes the current nav item along with any children\n        navElement.remove();\n     }\n\n}\n\n// Bind events\ndocument.querySelector(`[data-add-nav=\"pageButton\"]`).addEventListener(\"click\", addPageNav, false);\ndocument.querySelector(`[data-add-nav=\"collectionButton\"]`).addEventListener(\"click\", addCollectionNav, false);\ndocument.querySelector(`[data-add-nav=\"placeholderButton\"]`).addEventListener(\"click\", addPlaceholderNav, false);\ndocument.addEventListener(\"click\", deleteNavItem, false);\n\n// Draggable navigation elements\ndocument.querySelectorAll(`[data-draggable=\"children\"]`).forEach(zone => {\n    zone.addEventListener(\"dragstart\", dragStartHandler, false);\n    zone.addEventListener(\"dragenter\", dragEnterHandler, false);\n    zone.addEventListener(\"dragover\", dragOverHandler, false);\n    zone.addEventListener(\"dragleave\", dragLeaveHandler, false);\n    zone.addEventListener(\"drop\", dragDropHandler, false);\n    zone.addEventListener(\"dragend\", dragEndHandler, false);\n});\n\n// Prevent nav source from triggering form control enable\ndocument.querySelectorAll(`[data-add-nav=\"page\"], [data-add-nav=\"collection\"], [data-add-nav=\"placeholder\"]`).forEach(element => {\n    element.addEventListener(\"input\", (event) => {\n        event.stopPropagation();\n    });\n});"]}